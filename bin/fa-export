#! /usr/bin/env ruby
#
# @abstract Poor Man's version of a FlightAware client
#
# @author Ollivier Robert <ollivier.robert@eurocontrol.int>
# @copyright 2015 by Ollivier Robert for ECTL
#

# Usual housekeeping variables
BASEDIR = File.dirname(File.expand_path($0))
$LOAD_PATH << File.join(BASEDIR, '..', 'lib')

# Standard modules
require 'openssl'

# Setup things
require 'flightaware/client'
require 'config'

# Default config file
DEF_CONFIG = '.flightaware'

trap(:INT) { $stderr.puts("INT: stopping..."); @sigint = 1 }
trap(:TERM) { $stderr.puts("TERM: stopping..."); @sigterm = 1 }

def main(argv)
  config = MyConfig.load(DEF_CONFIG)

  fa = FlightAware::Client.new(config)
  loop {
    if @sigint or @sigterm
      $stderr.puts("#{fa.pkts} packets received, #{fa.bytes} bytes.")
      break
    end
    fa.run
  }
end

if __FILE__ == $0
  exit(main(ARGV) || 1)
end
